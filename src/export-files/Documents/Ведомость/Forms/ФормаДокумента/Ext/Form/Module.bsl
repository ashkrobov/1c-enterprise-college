
&НаСервере
Процедура ЗаполнитьГруппуНаСервере(Группа)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Студенты.Ссылка КАК Студент,
		|	Студенты.ВидФинансирования КАК ВидФинансирования,
		|	Студенты.УчебнаяГруппа КАК УчебнаяГруппа
		|ИЗ
		|	Справочник.Студенты КАК Студенты
		|ГДЕ
		|	Студенты.УчебнаяГруппа = &УчебнаяГруппа;";
	
	Запрос.УстановитьПараметр("УчебнаяГруппа", Группа);
	
	Выборка = Запрос.Выполнить().Выбрать();
	// ДокОбъект.СписокСтудентов.Загрузить(Запрос.Выполнить().Выгрузить());
	// ЗначениеВДанныеФормы(ДокОбъект, "Объект");
	Пока Выборка.Следующий() Цикл
        НовСтр = Объект.СписокСтудентов.Добавить();
        ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
    КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГруппу(Команда)
	СброситьДанные();
	
	Если ЗначениеЗаполнено(Объект.Группа) Тогда
		ЗаполнитьГруппуНаСервере(Объект.Группа);
	Иначе Сообщить("Группа не выбрана!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СброситьДанные()
	Объект.СписокСтудентов.Очистить();
	НеСдали = 0;
	Сдали = 0;
	НеЯвились = 0;
	Хорошо = 0;
	Отлично = 0;
	Удовлетворительно = 0;
	Неудовлетворительно = 0;
КонецПроцедуры

&НаСервере
Функция ПолучитьВсеТипыОценки()
	Стр =  Новый Структура;
	Стр.Вставить("БалльнаяШкала", Перечисления.ТипыОценки.БалльнаяШкала);
	Стр.Вставить("ЗачетНезачет", Перечисления.ТипыОценки.ЗачетНезачет);
	Возврат Стр;
КонецФункции

&НаСервере
Функция ПолучитьТипОценки(ВидКонтроля)
	Возврат ВидКонтроля.ТипОценки;
КонецФункции

&НаКлиенте
Процедура ВидКонтроляПриИзменении(Элемент)
	СброситьДанные();
	Если ПолучитьТипОценки(Объект.ВидКонтроля) = ПолучитьВсеТипыОценки().БалльнаяШкала Тогда
		Элементы.СписокСтудентовЗачет.Видимость = ЛОЖЬ;
		Элементы.СписокСтудентовОценка.Видимость = ИСТИНА;
	Иначе
		Элементы.СписокСтудентовЗачет.Видимость = ИСТИНА;
		Элементы.СписокСтудентовОценка.Видимость = ЛОЖЬ;
	КонецЕсли;
	ЗаполнитьГруппу(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СписокСтудентовЗачетПриИзменении(Элемент)
	Если Элементы.СписокСтудентов.ТекущиеДанные.Зачет = ИСТИНА Тогда
		Элементы.СписокСтудентов.ТекущиеДанные.Явка = ИСТИНА;
		Элементы.СписокСтудентов.ТекущиеДанные.Допуск = ИСТИНА;
	КонецЕсли;
	Если ЗначениеЗаполнено(Элементы.СписокСтудентов.ТекущиеДанные.Оценка) Тогда
		Элементы.СписокСтудентов.ТекущиеДанные.Явка = ИСТИНА;
		Элементы.СписокСтудентов.ТекущиеДанные.Допуск = ИСТИНА;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокСтудентовЯвкаПриИзменении(Элемент)
	Если Элементы.СписокСтудентов.ТекущиеДанные.Явка = ЛОЖЬ Тогда
		Элементы.СписокСтудентов.ТекущиеДанные.Зачет = ЛОЖЬ;
	КонецЕсли;
	Если Элементы.СписокСтудентов.ТекущиеДанные.Явка = ЛОЖЬ Тогда
		Элементы.СписокСтудентов.ТекущиеДанные.Оценка = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокСтудентовПриИзменении(Элемент)
	Если ПолучитьТипОценки(Объект.ВидКонтроля) = ПолучитьВсеТипыОценки().БалльнаяШкала Тогда
		Элементы.СписокСтудентовЗачет.Видимость = ЛОЖЬ;
		Элементы.СписокСтудентовОценка.Видимость = ИСТИНА;
	Иначе
		Элементы.СписокСтудентовЗачет.Видимость = ИСТИНА;
		Элементы.СписокСтудентовОценка.Видимость = ЛОЖЬ;
	КонецЕсли;
	РасчетРанжирования();
КонецПроцедуры

&НаКлиенте
Процедура РасчетРанжирования()
	НеСдали = 0;
	Сдали = 0;
	НеЯвились = 0;
	Хорошо = 0;
	Отлично = 0;
	Удовлетворительно = 0;
	Неудовлетворительно = 0;
	
	Для Каждого Студент Из Объект.СписокСтудентов Цикл
		Оценка = Студент.Оценка;
		Если Оценка > 0 И Оценка < 3 Тогда
			Неудовлетворительно = Неудовлетворительно + 1;
		ИначеЕсли Оценка >= 3 И Оценка < 4 Тогда
			Удовлетворительно = Удовлетворительно + 1;
		ИначеЕсли Оценка >= 4 И Оценка < 5 Тогда
			Хорошо = Хорошо + 1;
		ИначеЕсли Оценка = 5 Тогда
			Отлично = Отлично + 1;
		КонецЕсли;
		
		Зачет = Студент.Зачет;
		Если Зачет = ИСТИНА Или Оценка >= 3 Тогда
			Сдали = Сдали + 1;
		ИначеЕсли Зачет = ЛОЖЬ Или Оценка < 3 Тогда
			НеСдали = НеСдали + 1;
		КонецЕсли;
		
		Явка = Студент.Явка;
		Если Явка = ЛОЖЬ Тогда
			НеЯвились = НеЯвились + 1;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры;