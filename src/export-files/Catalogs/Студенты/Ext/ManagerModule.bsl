
Процедура СтуденческийБилет(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(СтуденческийБилет)
	Макет = Справочники.Студенты.ПолучитьМакет("СтуденческийБилет");

	ДанныеОрганизации = ПолучитьДанныеОрганизации();
	Макет.Параметры.Учредитель = ДанныеОрганизации.Учредитель;
	Макет.Параметры.НаименованиеПолное = ДанныеОрганизации.НаименованиеПолное;
	Макет.Параметры.КраткоеНаименование = ДанныеОрганизации.КраткоеНаименование;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Студенты.Наименование КАК ФИО,
	|	Студенты.ТекущаяПрограммаОбучения Как ПрограммаОбучения,
	|	Студенты.ГодПоступления КАК ГодПоступления,
	|	Студенты.НомерБилета КАК НомерБилета
	|ИЗ
	|	Справочник.Студенты КАК Студенты
	|ГДЕ
	|	Студенты.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	Документ = Макет.ПолучитьОбласть("Документ");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ФИОСтруктура = ФамилияИмяОтчество(Выборка.ФИО);
		Документ.Параметры.Фамилия = ФИОСтруктура.Фамилия;
		Документ.Параметры.Имя = ФИОСтруктура.Имя;
		Документ.Параметры.Отчество = ФИОСтруктура.Отчество;
		
		Документ.Параметры.ГодПоступления = Выборка.ГодПоступления;
		
		Если Выборка.НомерБилета <> 0 Тогда 
			Документ.Параметры.НомерБилета = Выборка.НомерБилета;
		КонецЕсли;
		
		Документ.Параметры.ФормаОбучения = НРег(Выборка.ПрограммаОбучения.ФормаОбучения);
		
		//Документ.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Документ, Выборка.Уровень());

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
    
    Результат = Новый Массив;
    
    // для обеспечения обратной совместимости

    Если ПропускатьПустыеСтроки = Неопределено Тогда
        ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
        Если ПустаяСтрока(Строка) Тогда 
            Если Разделитель = " " Тогда
                Результат.Добавить("");
            КонецЕсли;
            Возврат Результат;
        КонецЕсли;
    КонецЕсли;
    //

    
    Позиция = Найти(Строка, Разделитель);
    Пока Позиция > 0 Цикл
        Подстрока = Лев(Строка, Позиция - 1);
        Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
            Результат.Добавить(Подстрока);
        КонецЕсли;
        Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
        Позиция = Найти(Строка, Разделитель);
    КонецЦикла;
    
    Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
        Результат.Добавить(Строка);
    КонецЕсли;
    
    Возврат Результат;
    
КонецФункции

Функция ФамилияИмяОтчество(Знач ФИО) Экспорт
    
    СтруктураФИО = Новый Структура("Фамилия, Имя, Отчество");
    
    МассивПодстрок = РазложитьСтрокуВМассивПодстрок(ФИО, " ");
    
    Если МассивПодстрок.Количество() > 0 Тогда
        СтруктураФИО.Вставить("Фамилия", МассивПодстрок[0]);
        Если МассивПодстрок.Количество() > 1 Тогда
            СтруктураФИО.Вставить("Имя", МассивПодстрок[1]);
        КонецЕсли;
        Если МассивПодстрок.Количество() > 2 Тогда
            Отчество = "";
            Для Шаг = 2 По МассивПодстрок.Количество()-1 Цикл
                Отчество = Отчество + МассивПодстрок[Шаг] + " ";
			КонецЦикла;
            Отчество = СокрП(Отчество);
            СтруктураФИО.Вставить("Отчество", Отчество);
        КонецЕсли;
    КонецЕсли;
    
    Возврат СтруктураФИО;
    
КонецФункции

Функция ПолучитьДанныеОрганизации()
	ДанныеОрганизации = Новый Структура;
	ДанныеОрганизации.Вставить("Учредитель", Справочники.Организации.ОсновнаяОрганизация.Учредитель);
	ДанныеОрганизации.Вставить("НаименованиеПолное", Справочники.Организации.ОсновнаяОрганизация.НаименованиеПолное);
	ДанныеОрганизации.Вставить("КраткоеНаименование", Справочники.Организации.ОсновнаяОрганизация.КраткоеНаименование);
	Возврат ДанныеОрганизации;
КонецФункции
