
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Для Каждого СтрочкаСтудента из Объект.СписокСтудентов Цикл
		ВидФинансирования = СтрочкаСтудента.ВидФинансирования;
		ЗаписатьИнформациюНаСтудента(СтрочкаСтудента.Студент, Объект.Курс, ВидФинансирования);
	КонецЦикла;
	ИзменитьКурсГруппы(Объект.ЗачислениеВГруппу, Объект.Курс);
	ПереименоватьГруппу(Объект.ЗачислениеВГруппу, Объект.НовоеНазваниеГруппы);
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИнформациюНаСтудента(Студент, КурсСтудента, ВидФинансирования)
	СтудентСсылка = Студент;
	СтудентОбъект = СтудентСсылка.ПолучитьОбъект();
	
	СтудентОбъект.Отделение = Объект.Отделение;
	СтудентОбъект.Курс = КурсСтудента;
	СтудентОбъект.ВидФинансирования = ВидФинансирования;
	
	СтудентОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ВидПриказаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОткрытьФорму(ДвижениеКонтингента.ПолучитьФормуИзВидаПриказа(ВыбранноеЗначение));
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПереименоватьГруппу(УчебнаяГруппа, НовоеНазваниеГруппы)
	УчебнаяГруппаОбъект = УчебнаяГруппа.ПолучитьОбъект();
	УчебнаяГруппаОбъект.Наименование = НовоеНазваниеГруппы;
	УчебнаяГруппаОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.ВидПриказа = ДвижениеКонтингента.ПолучитьВидыПриказов().ПереводНаДругойКурс;
	Объект.СтатусСтудента = ДвижениеКонтингента.ПолучитьСтатусыСтудента().Студент;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГруппуНаСервере(Группа)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Студенты.Ссылка КАК Студент,
		|	Студенты.ВидФинансирования КАК ВидФинансирования,
		|	Студенты.УчебнаяГруппа КАК УчебнаяГруппа
		|ИЗ
		|	Справочник.Студенты КАК Студенты
		|ГДЕ
		|	Студенты.УчебнаяГруппа = &УчебнаяГруппа;";
	
	Запрос.УстановитьПараметр("УчебнаяГруппа", Группа);
	
	Выборка = Запрос.Выполнить().Выбрать();
	// ДокОбъект.СписокСтудентов.Загрузить(Запрос.Выполнить().Выгрузить());
	// ЗначениеВДанныеФормы(ДокОбъект, "Объект");
	Пока Выборка.Следующий() Цикл
        НовСтр = Объект.СписокСтудентов.Добавить();
        ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
    КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГруппу(Команда)
	Если ЗначениеЗаполнено(Объект.ЗачислениеВГруппу) Тогда
		ЗаполнитьГруппуНаСервере(Объект.ЗачислениеВГруппу);
	Иначе Сообщить("Группа не выбрана!");
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКурсГруппы(УчебнаяГруппа)
	Возврат УчебнаяГруппа.Курс;
КонецФункции

&НаСервереБезКонтекста
Функция ИзменитьКурсГруппы(УчебнаяГруппа, НовыйКурс)
	УчебнаяГруппаОбъект = УчебнаяГруппа.ПолучитьОбъект();
	УчебнаяГруппаОбъект.Курс = НовыйКурс;
	УчебнаяГруппаОбъект.Записать();
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОтедениеГруппы(Группа)
	Возврат Группа.Отделение;
КонецФункции

&НаКлиенте
Процедура ЗачислениеВГруппуПриИзменении(Элемент)
	Объект.Курс = ПолучитьКурсГруппы(Объект.ЗачислениеВГруппу) + 1;
	Объект.НовоеНазваниеГруппы = Объект.ЗачислениеВГруппу;
	Объект.Отделение = ПолучитьОтедениеГруппы(Объект.ЗачислениеВГруппу);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Истина;
КонецПроцедуры

